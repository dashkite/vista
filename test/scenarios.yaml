- name: Git.ls
  scenarios:
    - name: simple
      glob: "test/*.coffee"
      assertions:
        - path: "$.some ({ path }) -> path == 'test/index.coffee'"
        - path: "$[0].language == 'coffeescript'"

- name: Token.tokenize
  scenarios:
    - name: simple
      files:
        - path: "test.coffee"
          content: |
            foo = true
            # inline comment
          language: coffeescript
      assertions:
        - path: "$[0].token?"
        - { type: equal, expect: 'foo ', path: "$[0].token" }
        - path: "$[5].token.type?"
        - path: "$[5].token.type == 'comment'"

- name: Token.normalize
  scenarios:
    - name: simple
      files:
        - path: "test.coffee"
          content: |
            foo = true
            # inline comment
          language: coffeescript
      assertions:
        - { type: equal, expect: 'foo ', path: "$[0].content" }
        - path: "$[5].type?"
        - path: "$[5].type == 'comment'"

- name: Token.decorate
  scenarios:
    - name: simple
      files:
        - path: "test.coffee"
          content: |
            foo = true
            # inline comment
          language: coffeescript
      assertions:
        - path: $[0].offset == 0
        - path: $[0].line == 1
        - path: $.at(-1).line == 2

- name: Todos.label
  scenarios:
    - name: simple
      files:
        - path: test.coffee
          content: |
            foo = true
            # inline comment
            bar = false
            # todo title
            # body
          language: coffeescript
      assertions:
        - path: $.at(-4).todo == 1
        - path: $.at(-2).todo == 1

- name: Todos.extract
  scenarios:
    - name: simple
      files:
        - path: test.coffee
          content: |
            foo = true
            # inline comment
            bar = false
            # todo title
            # body
          language: coffeescript
      assertions:
        - path: $[0].title == 'Title'
        - path: $[0].body == 'Body'

# - name: extract todos
#   scenarios:
#     - name: classifier
#       scenarios:
#         - name: inline comment
#           scenarios: 
#             - name: simple todo
#               comments: "#"
#               lines:
#                 - { text: not a comment, path: a }
#                 - { text: "# comment", path: a }
#                 - { text: "# todo title", path: a }
#                 - { text: "#      body text", path: a }
#               assertions:
#                 - path: "!$[0].todo"
#                 - path: "!$[1].todo"
#                 - path: $[1].comment?
#                 - path: $[2].todo
#                 - { type: equal, path: "$[2].title", expect: title }
#                 - path: $[3].todo
#                 - { type: equal, path: "$[3].body", expect: body text }

#             - name: todo at end of file
#               comments: "#"
#               lines:
#                 - { text: not a comment, path: a }
#                 - { text: "# not a todo", path: a }
#                 - { text: "# todo title", path: a }
#                 - { text: "#      body text", path: a }
#                 - { text: "# not a todo", path: b }
#               assertions:
#                 - path: "!$[4].todo"

#         - name: block comment
#           scenarios:
#             - name: simple todo
#               comments:
#                 inline: "#"
#                 block: "^[^#]*###(?:$|[^#])"
#               lines:
#                 - { text: not a comment, path: a }
#                 - { text: "###", path: a }
#                 - { text: "comment", path: a }
#                 - { text: "###", path: a }
#                 - { text: "### todo title", path: a }
#                 - { text: "         body text", path: a }
#               assertions:
#                 - path: "!$[0].todo"
#                 - path: "!$[0].comment?"
#                 - path: $[1].comment?
#                 - path: "!$[1].todo"
#                 - path: $[2].comment?
#                 - path: "!$[2].todo"
#                 - path: $[3].comment?
#                 - path: "!$[3].todo"
#                 - path: $[4].comment?
#                 - path: $[4].todo
#                 - { type: equal, path: "$[4].title", expect: title }
#                 - path: $[5].comment?
#                 - path: $[5].todo
#                 - { type: equal, path: "$[5].body", expect: body text }

#         - name: mixed block and inline
#           scenarios:
#             - name: within a file
#               # debug: true
#               comments:
#                 inline: "#"
#                 block: "^[^#]*###(?:$|[^#])"
#               lines:
#                 - { text: not a comment, path: a }
#                 - { text: "# not a todo", path: a }
#                 - { text: "# todo title", path: a }
#                 - { text: "#      body text", path: a }
#                 - { text: "not a comment", path: a }
#                 - { text: "###", path: a }
#                 - { text: "comment", path: a }
#                 - { text: "###", path: a }
#                 - { text: "### todo title", path: a }
#                 - { text: "         body text", path: a }
#                 - { text: "###", path: a }
#                 - { text: "# ordinary comment", path: a }
#                 - { text: "# ### todo title", path: a }
#                 - { text: "# body", path: a }
#               assertions:
#                 - path: "!$[0].todo"
#                 - path: "!$[1].todo"
#                 - path: $[2].todo
#                 - { type: equal, expect: title,  path: "$[2].title" }
#                 - path: $[3].todo
#                 - type: equal
#                   expect: body text
#                   path: $[3].body
#                 - path: "!$[4].todo"
#                 - path: "!$[5].todo"
#                 - path: "!$[6].todo"
#                 - path: "!$[7].todo"
#                 - path: $[8].todo
#                 - { type: equal, expect: title, path: "$[8].title" }
#                 - path: $[9].todo
#                 - { type: equal, expect: body text, path: "$[9].body" }
#                 - path: "!$[11].todo"
#                 - path: $[12].todo
#                 # - { type: equal, expect: title, path: "$[11].title" }
#             - name: across files
#               # debug: true
#               comments:
#                 inline: "#"
#                 block: "^[^#]*###(?:$|[^#])"
#               lines:
#                 - { text: "###", path: a }
#                 - { text: "comment", path: a }
#                 - { text: "### todo title", path: b }
#                 - { text: "         body text", path: b }
#               assertions:
#                 - path: "!$[0].todo"
#                 - path: "!$[1].todo"
#                 - path: $[2].todo
#                 - { type: equal, expect: title, path: "$[2].title" }
#                 - path: $[3].todo
#                 - { type: equal, expect: "body text", path: "$[3].body" }
